@mixin icon {
    content: '';
    display: inline-block;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    vertical-align: middle;
}

@mixin bg($path, $width: 0, $height: 0) {
    width: $width + px;
    height: $height + px;
    background-image: url('../img/svg/' + $path + '.svg');
}

@mixin white {
    filter: brightness(0) invert(1);
}

@mixin black {
    filter: brightness(0);
}

@mixin sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

@mixin line-clamp($count: 3) {
    display: -webkit-box;
    -webkit-line-clamp: $count;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

@mixin ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin clamp($minWidth, $maxWidth, $minFontSize, $maxFontSize, $update: false, $rem: 10, $fallback: false) {
    $slope: strip-unit($maxFontSize - $minFontSize) / strip-unit($maxWidth / $rem - $minWidth / $rem);
    $yAxisIntersection: strip-unit(-$minWidth * $slope / $rem) + strip-unit($minFontSize);

    @supports (font-size: clamp(1rem, 1vw, 2rem)) {
        font-size: clamp($minFontSize, $yAxisIntersection + rem #{' + '} $slope * 100 + vw , $maxFontSize);

        @if not $update {
            min-height: 0vw;
        }
    }

    @supports not (font-size: clamp(1rem, 1vw, 2rem)) {
        font-size: $minFontSize;

        @media (min-width: $minWidth) {
            @if ($fallback) {
                font-size: $fallback;
            }
            font-size: calcFluidFontSize($minWidth, $maxWidth, $minFontSize, $maxFontSize, $rem: 10);
        }

        @media (min-width: $maxWidth) {
            font-size: $maxFontSize;
        }
    }
}

@mixin clear {
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin cover {
    display: block;
    position: relative;
    overflow: hidden;

    &:before {
        content: '';
        display: block;
    }

    img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

@mixin wrap($offset: $g-sm) {
    padding-left: unquote('max(#{$offset}, env(safe-area-inset-left))');
    padding-right: unquote('max(#{$offset}, env(safe-area-inset-right))');
}

@mixin unwrap($offset: $g-sm) {
    margin-left: unquote('min(#{-$offset}, calc(env(safe-area-inset-left) * -1))');
    margin-right: unquote('min(#{-$offset}, calc(env(safe-area-inset-right) * -1))');
}